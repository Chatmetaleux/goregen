// Code generated by go-bindata.
// sources:
// static/html/home.html
// static/js/chart.js
// static/js/controls.js
// static/js/websocket.js
// DO NOT EDIT!

package www

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticHtmlHomeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x57\x61\x6f\xdb\x36\x13\xfe\xec\xfc\x8a\xab\x5e\xbc\x40\x02\x4c\x96\xd2\xae\x40\xe1\xca\x1e\xba\x64\x45\x0b\xac\xdd\xd0\xa4\x1d\xf6\x91\xa2\xce\x12\x1b\x8a\x14\xc4\x93\xe4\x2c\xf0\x7f\x1f\x48\x4a\xb2\xbc\xc6\xb1\x8b\xfa\x8b\xc5\x87\xbc\xe7\x39\xde\xf1\x4e\x54\xf2\xec\xfa\x8f\xab\xdb\xbf\xff\xfc\x0d\x0a\x2a\xe5\xea\x2c\xb1\x7f\x20\x99\xca\x97\x01\xaa\xc0\x02\xc8\xb2\xd5\xd9\x2c\x29\x91\x18\xf0\x82\xd5\x06\x69\x19\x7c\xbe\x7d\x1b\xbe\x0a\x2c\x4e\x82\x24\xae\x3e\x61\x8e\x2a\xd5\x9b\x24\xf2\xe3\xb3\x59\x62\xe8\xde\x3d\xcc\x52\x9d\xdd\xc3\xc3\xd9\x6c\x36\xeb\x44\x46\xc5\x02\x2e\xe3\xf8\xff\xaf\xed\xb8\x40\x91\x17\x34\x01\x2a\x6d\x04\x09\xad\x16\x50\xa3\x64\x24\x5a\xf4\x30\xcb\x32\xa1\xf2\x05\xbc\xaa\x36\x0e\x28\x59\x9d\x0b\xb5\x80\xd8\x8d\x52\xbd\x09\x8d\xf8\xc7\xad\x48\x75\x9d\x61\x1d\xa6\xda\x2d\xdc\x9e\x9d\xcd\x66\xc4\x52\x89\xde\x81\x7e\xd6\x54\x8c\xbb\xd5\x97\x2f\xab\x0d\xbc\xa8\xfa\xb5\xfd\xd2\xb9\x6e\xb1\x6e\x05\x76\x40\x99\x37\x1b\xfc\x7c\xfe\xf3\x6e\xe9\x9c\x6b\x45\xb5\x96\xc6\x2f\x19\x3c\xba\x8c\xab\x0d\xc4\x10\x3b\xea\xd1\x05\x83\xdc\x6e\x6b\xae\x58\xfb\x13\x0c\x03\x1b\x4c\xf2\xd6\x99\x30\x95\x64\xf7\x0b\x10\x4a\x0a\x85\x61\x2a\x35\xbf\x73\x7b\x6b\xb1\x26\xc1\x99\x0c\x99\x14\xb9\x5a\x00\xe9\x6a\xf0\x60\x42\xba\x17\xde\x17\x2f\xe3\x9d\x9b\x8f\x88\x11\x6e\x68\xa0\xe3\xa8\x08\xeb\xbd\x98\xb2\x86\xf4\xe3\xd6\xa6\xcd\xa7\x61\x5c\xc0\x65\xb5\x81\x54\x32\x7e\x07\x46\x4b\x91\x1d\xa0\xb1\x3c\x6d\x0e\x73\xbb\x33\x6f\xbf\x16\x52\x2e\x40\x69\xe5\xd3\x6b\xa8\xd6\x77\xb8\x80\xff\xc5\x71\x3c\x01\xc2\xe1\xb8\xcc\xc7\x50\xce\x92\x68\x38\x56\x89\xe1\xb5\xa8\x08\xe8\xbe\xc2\x65\x60\xf7\x14\x7d\x65\x2d\xf3\x68\x00\xa6\xe6\xcb\x20\x32\xc4\x48\xf0\x48\x8a\x34\xca\x5e\xcc\x4b\xa1\xe6\x5f\x4d\xb0\x4a\x22\xbf\xea\x3b\x59\xbe\x9a\xa8\xc3\xd4\x68\x7e\x87\xf4\x83\x3c\xc3\xd9\xf9\x51\x1a\x9b\x96\x03\x1c\xb6\xf2\x3a\xa1\x32\xdd\xcd\xb5\x92\x9a\x65\xb0\x84\x75\xa3\x5c\x3e\xe1\xfc\xc2\x27\xc2\x20\xfd\x2e\x0c\xa1\x7a\x93\x65\xf5\x79\xf0\xf0\x30\xdf\x0d\xb7\xdb\xe0\xc2\x67\xa3\x49\x2d\x65\x8a\x37\x6e\xeb\xe7\x0e\xdd\xbe\x76\xc9\xe8\xa5\x92\xc8\xb7\x89\xc4\xd6\xba\xf5\xa1\xb8\x5c\xbd\x43\x29\x35\x0c\x8d\xe1\x59\x12\x15\x97\x6e\xa6\x8e\x9c\x93\xfe\x64\x01\x97\xcc\x98\x65\xa0\x58\x6b\xbb\xc9\x2c\x29\x9e\xaf\x86\xf2\x4b\xa2\xe2\xb9\xc3\x4c\xc5\x14\xb8\xbc\x2f\x83\xb1\x52\xdc\xe9\x09\x06\xfb\xf6\x13\xeb\xbe\x68\x49\x2c\x47\x17\x8c\x8a\x29\x67\xea\x6b\xbf\x5f\x34\x10\x3b\xa5\x59\x42\xb5\xfb\x9f\x25\x94\xad\x6e\x88\x11\x2e\x92\x88\xb2\x11\x1b\xa9\xa1\x75\xb3\xc1\x2a\x1c\xe7\x93\xa8\x37\xde\x23\xb9\x2a\x58\x9d\xe3\xd3\x54\x93\x35\xc7\x09\x6f\x51\x19\xdb\x0d\x0f\x91\x8d\x3b\x3e\x46\xf4\x17\xa6\x3e\x79\x8f\x53\x75\xe6\x31\x8a\x24\x72\xd1\xf3\x29\xd8\x4f\xd7\x70\x7e\xfb\x48\xa6\x0d\xd1\x64\x92\x6a\x09\xfc\x73\x05\xdc\x6f\x36\x00\xad\xb8\x14\xfc\x6e\x19\xd4\xa9\x87\xce\x2f\x5e\x07\x7d\xb8\x92\xc8\x5b\x3f\xcd\x74\x2d\x0c\xff\x96\x6c\x44\x1d\xdf\x38\x3a\x8d\xf2\xea\x9e\xcb\xff\xf8\x66\x11\xef\x9a\x7d\x3a\x4e\x73\xad\x3b\x05\xfc\x86\x74\xb5\xc7\x63\x01\x47\x63\x1f\xa6\x2c\x49\xd4\xc7\xd1\x1f\x75\x1f\xe5\x67\x61\x68\xdf\x3c\xf7\x15\xc2\x95\x56\x6b\x91\x83\xa1\xba\xe1\x7d\xb3\xfe\xa0\x33\x84\xf1\xb7\x3f\x8a\x22\x78\xd3\x90\x0e\x4b\x8b\x4a\x24\x03\x54\x20\xa4\x7a\x03\x99\x06\x1f\x0a\xe0\x76\x27\x06\x1a\x23\x54\xee\xa6\xd7\x5a\x4a\xdd\xd9\x11\xf7\x6a\x2d\x93\x0d\x1a\xab\xf5\x31\x7d\xc7\xe4\xfa\xca\x5b\x80\x50\x04\x7b\x5a\xef\x95\x6b\xea\x4e\x6e\x01\xaa\x29\x53\xac\x41\xaf\xa1\x60\x72\x1d\xf6\x3a\xa4\xad\x76\x8a\x6b\x5d\xa3\x9d\x20\x2b\x34\x5a\xc1\x79\x6c\x0b\x37\x94\xa2\x14\x04\x85\x96\x19\x96\x17\x56\xf9\x73\x75\xdd\xd4\xcc\x9d\x30\x00\x20\x51\xe2\x7c\x04\xbe\x51\x2e\xd9\x46\x94\x4d\xe9\x96\xc1\x5a\xd7\xc0\x14\x34\x95\xf7\x60\x90\x26\x76\xe7\x94\xfb\x76\xf7\x8b\x53\xb1\xe9\xda\xe9\x7c\xb7\x0a\x64\xba\x53\x27\xc8\xdc\xea\xaa\x2f\x4c\xbb\x99\x23\x61\x24\x9b\x25\xb2\xaf\x75\x68\x7b\xa3\x9e\xdb\x74\x82\x78\xe1\x12\xe5\x52\xe9\x95\xad\xc0\xaf\x9a\x48\x97\x83\xc6\x69\x02\xa9\xb3\x39\x5d\xe3\xbd\xbd\x17\xb4\x4c\xde\x20\x3f\x9e\x11\x23\x11\x2b\xeb\x88\x33\x01\xa1\xec\x1d\x47\xab\x0c\x52\xa4\x0e\x51\x01\x32\x5e\x40\x89\xcc\x34\xb5\x63\xf7\xa5\xff\x56\xd4\xc6\xfa\x9e\x6a\x2d\x9f\xd8\x81\x21\x7b\xf9\x70\x40\xdd\x28\xe8\x04\x15\xc0\xf6\x1c\x86\xf3\x35\x93\x06\x17\x90\x0d\x2d\xe0\xa2\xbf\xc0\x84\xe1\xf0\x56\xf1\xa7\x7d\x7c\xa7\x8c\xad\x6d\xbf\x51\xda\x02\x7b\xbc\x47\xf2\x75\x6e\x27\x83\xd5\xc3\xc3\xdc\xd7\xe9\xdc\x8e\xb7\xdb\x23\xad\xf7\xe3\xe1\x3a\x39\x28\x34\x2d\xc4\xa9\xe0\x14\x3f\x2a\xfc\xa1\x3f\xc0\x7d\x23\xc8\xfa\xec\x1d\x14\xdd\xd5\xe0\x54\x72\x87\x9e\x2c\x38\x26\xe1\xb8\xe6\xb4\x22\xa7\xaa\x53\xfc\xa8\xee\xad\x3f\xe1\x4d\x55\xb9\x8b\xbf\xca\x86\x53\x7e\x50\x76\x57\xa1\x53\xd1\x1d\xba\xdd\x42\xf9\xe5\x34\x55\xa9\xbb\x53\x55\xf7\xca\x76\x2a\xbc\x37\x71\x8a\xf6\x8d\x62\x95\x29\x34\x99\x5d\xcd\x1d\x0d\xf5\xa4\xa0\xa7\xda\x13\xf8\x68\xa0\x7d\xbd\xfa\x8a\x13\x66\xac\x41\x8f\x1c\x14\x9e\xd4\xfa\x54\x78\x02\x3f\x22\xbc\xbb\x7b\x4c\xdf\x99\xdf\x5c\x43\xec\xfd\xd7\xdf\x1b\xed\x17\x86\xfb\x5e\x58\x06\xaf\xe2\x38\x00\xff\xc9\xb6\x0c\x5e\xc6\xb1\xbb\x10\xb6\xf9\x3e\x57\x12\xf9\xab\x6a\x12\xf9\x0f\xdf\x7f\x03\x00\x00\xff\xff\x4a\x19\x59\xa4\x09\x0f\x00\x00")

func staticHtmlHomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticHtmlHomeHtml,
		"static/html/home.html",
	)
}

func staticHtmlHomeHtml() (*asset, error) {
	bytes, err := staticHtmlHomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/html/home.html", size: 3849, mode: os.FileMode(420), modTime: time.Unix(1495630186, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJsChartJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4f\x8f\xdb\xb6\x13\x3d\xdb\x9f\x62\xa0\xdf\xc1\xe4\x6f\x25\x99\x9b\xec\x16\x8b\x35\x7c\x68\x0f\x39\x05\x45\x90\x02\xb9\x04\x7b\x60\x44\xca\x22\x4a\x93\x02\x35\xb6\xe5\x2e\xfc\xdd\x8b\x21\xe9\x7f\xf1\x76\x8b\x5e\x6c\xf1\x71\xe6\x71\x38\x7c\x6f\xb6\x32\x80\xfa\xd8\x74\x32\x20\x2c\xe1\xf5\xb0\x98\xe6\x55\x6d\x9c\x21\xa8\xdd\xb8\x06\x8d\x77\xec\x2f\x1d\xfc\x37\x69\x37\x9a\xc3\xeb\x14\x80\x12\x1d\x2c\xe1\xc3\x83\x10\x8b\xbc\x56\x12\x25\x2c\xe1\xfb\x0b\x01\xbb\xce\x58\x0d\xcc\x55\x15\x8f\x1b\x75\xbf\x19\xba\x0b\x16\x8a\x39\x13\x4c\x27\x44\x30\x6c\x57\xb0\x04\xf5\xb1\x1e\xb4\xd5\x0d\xb2\x62\xd8\xae\x0a\xbe\x48\x9b\x6b\x19\x56\x86\x32\x5e\xd1\xf7\xcf\xf0\x41\x94\x10\xcc\xaa\xc3\xf4\xf9\xc3\x23\xfa\xf5\x33\x3c\x8a\x12\xac\x6e\xf1\x19\x1e\xc4\x21\x67\xee\x8c\xc2\x0e\x96\x20\xe0\x8e\x8e\xa8\x25\x62\x60\x45\x44\x0b\x0e\x55\x66\xae\x29\xed\xbc\x8a\xdc\x99\xa0\xd3\xb4\xb8\x61\x48\xf0\x25\x05\xfa\xfe\xbc\x48\x25\x65\x0a\xba\x58\xcc\xec\x7b\xed\x14\x2b\x56\x05\xcf\x2c\x18\xa4\x1b\x5a\x1f\xd6\x45\x09\x69\x61\x25\x6a\x56\xc0\xdd\x55\x61\x77\x50\x94\x17\x18\x9d\x74\x07\x05\xa7\xf6\xa4\x13\xc6\xdc\xba\x46\x5a\xfd\xd9\x38\x2d\x03\xe3\xd3\xc9\xa4\x56\x7e\x2d\x8d\x63\xdf\x45\x09\xee\x25\x22\x41\xba\x95\x8e\x40\xec\xc1\xcb\x89\x62\xff\x2f\x14\x4f\x42\x94\x70\xff\x28\xc4\x15\x4f\x6a\x43\x09\xe2\x4c\x64\x8d\xd3\x89\x8b\xbe\x12\xc9\xc8\x8e\x5a\x02\xa6\x4a\x30\xa4\xa3\xc9\x64\x12\x34\x6e\x82\x83\x91\x19\x7a\xe8\xc9\x21\xc6\xee\xdf\x8d\xdd\x33\x95\x63\x17\xd3\x29\x9c\x24\x0a\x68\x9a\x3f\x59\x92\x67\x12\xe4\x16\x96\xf0\xfb\x66\xfd\x43\x07\x76\x16\xd5\xac\xde\x7e\x95\xbb\x6f\xde\xa2\x5c\xe9\x19\xaf\x3b\x5c\x5b\xc6\xa3\x1e\x53\xd6\xd0\x99\x36\x3e\x76\x82\x4c\x0b\x6c\x7b\x64\x85\x0b\x2d\x6f\x73\x0e\x9c\x32\xaa\xfb\x84\x1c\xa6\xf1\x6f\x3e\x87\xaf\x5a\x05\xb9\x03\xec\x74\xec\x49\x1d\xf1\x73\x2d\xd8\x99\x81\x67\x92\x2c\x07\x55\x94\x31\xf4\x27\xf8\x52\x25\x6e\x63\x6d\x3e\x7b\x3e\x87\x3f\xac\x51\x1a\x0c\x02\xfa\x74\x8e\x6e\xf1\x74\x8e\x6c\xd0\x6c\xf5\x5b\xe7\xbc\x23\xbb\x91\xc5\x0b\xf1\xa8\x39\xc1\x8b\x53\x66\x0c\x33\x71\x1c\x9c\x30\xef\x58\x31\xa0\x0c\x58\x94\xf1\x01\xd2\x9b\xdc\xb4\x6d\x3e\x87\x2f\xbe\x8f\x05\x7a\xab\xd2\xa8\xe8\xbd\x71\x08\xbe\x6d\x23\xdc\x06\xef\x72\xe1\xb9\xcb\xb1\x0a\xc6\x8f\x3d\x8d\x7d\x9d\x9c\x2d\xa4\x74\x3b\x90\x8b\xf2\xb2\xb1\xa6\xff\x22\xc9\xd2\xa4\xa0\x74\x49\x43\xdd\x8c\x3b\x19\xcd\xb1\x41\x37\x78\x19\x97\x66\x41\xf6\xc3\x05\x9e\x1d\x5e\xe6\x09\x10\xf5\x7d\xe5\xe1\x73\x68\x63\xe5\x30\xd0\x69\x72\x34\x03\xd0\x4f\x55\x8d\x97\x01\xff\xd0\x70\x11\x5d\xbd\x67\x4f\x42\xf0\xec\x68\xca\x69\xa4\xb5\x24\x5a\x22\xfa\x2d\x0e\x12\x36\xf2\x9a\x1a\xfc\xc9\x87\xb5\xc4\x93\x41\x98\x4a\xe6\x48\x1d\x67\x0e\x2a\x50\x1c\x96\xcb\x25\x88\xe3\x06\x40\x36\xce\xcc\xf9\xdd\xec\x28\xda\xc3\x85\xa3\x18\x73\x95\xe2\x73\xf6\x8b\xf8\xff\x03\xe7\x35\xfa\x4f\x66\xd4\x8a\xdd\x53\x45\xb3\x0e\xe4\xca\xcf\x92\xe1\x4e\xcf\x9e\x04\xfc\xab\xb5\xac\x40\x3d\xe2\x59\x23\x03\xee\xad\x4e\x60\x25\x5d\xd3\xf9\x40\xf7\xd5\x4e\x15\x3f\x0b\x7d\xa4\x8d\xaa\x7e\xd2\xeb\x9b\xad\x3d\x6d\xd5\xf7\x8f\xb7\x5b\x57\x5d\x0c\x1e\xa9\x85\xd5\xc3\x63\x9e\x83\xff\xe1\x6d\xf6\xb7\x7d\xfe\xac\x5b\x64\x7b\xfe\x3e\x93\xe9\xab\x5e\x46\xb1\x14\x9b\x60\xd9\xff\x08\xe1\xd7\xea\xea\x4f\x2a\x54\x12\x37\x6b\x46\x62\x7e\xab\x1a\xb2\x79\x8a\xbb\x32\x16\xe5\x6d\x82\x8c\x2b\x1a\xb6\x22\x42\x5a\x0e\x9a\x0a\xa5\xff\x34\x9b\x23\xfc\x86\xfd\x0e\x8b\xe9\xdf\x01\x00\x00\xff\xff\x05\x9e\xc2\x79\xd7\x07\x00\x00")

func staticJsChartJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJsChartJs,
		"static/js/chart.js",
	)
}

func staticJsChartJs() (*asset, error) {
	bytes, err := staticJsChartJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/js/chart.js", size: 2007, mode: os.FileMode(420), modTime: time.Unix(1495629812, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJsControlsJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\x41\x73\xd3\x3e\x10\xc5\xcf\xf2\xa7\xd8\x7f\x2f\xb2\x67\xfc\x77\x0f\xdc\xe8\xe4\x00\x29\x0c\x30\x43\x39\xa4\xe5\x2e\x2b\x6b\x47\x45\x91\x84\xb4\x21\xcd\x64\xfc\xdd\x19\xd9\x49\xa3\x50\xbb\x85\x61\x38\x66\xf7\xbd\x5f\xbc\xcf\xbb\x6e\x36\x46\x92\xb2\x06\x7c\x3d\x5f\x09\xdf\x62\x5e\xc0\x3e\x63\x01\x69\x6e\x4d\xa3\xda\x7c\x9f\x31\xf6\xd9\x2e\xf1\x35\x5c\x0c\x02\x7f\x91\xb1\xae\x04\x5f\x2f\x48\x78\x2a\xae\xb2\x2e\xcb\x12\xca\xb5\x0a\xf2\x25\xd0\xa3\xe6\x05\xd6\x7c\x27\xf5\xb3\x0f\x14\xfb\xcf\x32\x4e\x36\xd9\xb4\x25\x48\xa1\x75\x2d\xe4\xb7\x1e\xa9\x1a\xc8\x69\xe7\xd0\x36\xb1\x59\xc0\x6c\x36\x03\x6e\xeb\x7b\x94\xc4\x7b\x01\x93\x4d\x0b\x33\xf8\xb4\xf8\x72\x53\x05\xf2\xca\xb4\xaa\xd9\xf5\xda\xab\x8c\x75\x4f\x01\xff\x45\xc0\x20\x3c\x00\x68\xe5\xed\x16\x0c\x6e\xe1\x9d\xf7\xd6\xe7\x1c\x1f\x1c\x4a\x52\xa6\x85\xc8\x26\x0b\x35\x82\x80\xc1\x53\x42\x6b\x09\x78\x09\x09\x73\xf8\xa7\x8c\x2d\x5f\x55\x1e\xbf\x6f\x30\x50\xce\x2f\x65\x3f\x11\x2f\x32\xc6\xaa\x15\x8a\x25\xfa\x9c\xcf\xad\x21\x34\xf4\xff\xed\xce\x21\x2f\x81\x0b\xe7\xb4\x92\x22\x86\x70\x79\x1f\xac\x19\xd4\x6b\xb5\xc6\xa8\xc8\x27\xfa\xd6\xe4\x1c\xe3\x93\xf2\x12\x8e\x19\xe6\x0f\x2b\x3f\x4c\xc3\xa4\x35\xc1\x6a\xac\xb6\xc2\x1f\x85\xa0\x92\x90\x79\x09\x51\x7c\x95\x31\xd6\xf5\x3c\x67\x03\x0d\xc9\x8f\xd1\x4e\xe9\x3a\xe1\x03\xc6\x56\xe5\x31\x38\x6b\x02\xf6\x90\x38\x76\x40\x8d\x92\xde\x68\x9d\xf3\x4a\x36\x6d\x7c\xf3\xbc\xa8\x56\xb4\xd6\x11\x5c\xc5\xdf\x53\xda\x9b\xfa\x83\xd0\x4d\xbf\x24\x21\xf5\xa4\xf5\x29\xef\x9d\xbb\xde\xf8\x3e\x9e\xd4\x79\xaa\x4e\xf9\xae\xed\xd6\x8c\x39\xd3\xfa\x94\xf7\xd6\xba\xaf\x56\x93\x68\xcf\x26\x3c\x55\xa7\x7c\x6f\x2d\x91\x5d\x8f\x58\xcf\x1a\x53\xee\x8f\x86\xd0\xff\x10\x7a\x81\x32\xf5\x26\xe5\x29\xe7\xf0\x3d\x78\xaf\x7c\xa0\xd4\x99\x94\x07\xe7\xf1\xea\x8e\xa7\xc3\xba\x27\x97\xbe\x20\xeb\x86\x43\x3f\xdb\xf4\x40\xd6\x4d\x6f\x26\xfc\xc6\x6a\x46\xc0\xe8\x56\xee\xbb\x64\x29\x0f\x90\x5f\x47\x24\xaf\x2b\x79\xe7\x78\x51\x09\x22\x9f\xf3\xa5\x0a\xa2\xd6\xb8\xe4\x25\x98\x8d\xd6\xe3\xb9\xf4\xa6\xf8\xba\xc7\x6c\x9c\x4f\x06\x20\x3c\x8d\x26\x20\x3c\xfd\x65\x04\x91\xf0\x2f\x32\x38\x0c\xf3\x67\x09\x3c\x06\xd7\x67\xf0\x33\x00\x00\xff\xff\x99\x05\xc1\x51\x7f\x06\x00\x00")

func staticJsControlsJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJsControlsJs,
		"static/js/controls.js",
	)
}

func staticJsControlsJs() (*asset, error) {
	bytes, err := staticJsControlsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/js/controls.js", size: 1663, mode: os.FileMode(420), modTime: time.Unix(1495609747, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJsWebsocketJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\xcf\x53\xeb\x36\x10\x3e\xc7\x7f\xc5\xf6\x5d\xe4\x0c\xa9\xc3\x1b\xe6\x71\xc0\x18\x86\x52\x0e\x74\x3a\x30\x03\x2d\x3d\x50\x0e\x8a\xbc\x71\x3c\x28\x52\x46\x5a\xdb\x87\x4e\xfe\xf7\x8e\x24\x3b\xc4\x60\xa7\x30\xbd\xc9\xf2\xb7\x9f\xf6\xc7\xb7\xbb\x35\x37\xd0\xd8\x1b\x63\xb4\x49\xa3\xf0\xf1\x4b\x45\xa4\x15\x64\xc0\xce\x17\xe1\xa8\x95\x90\xa5\x78\xcd\xbe\xd9\x6a\x61\x85\x29\x17\xf8\xa8\xc5\x2b\x52\x3c\x4d\xbf\x5d\x3c\xa0\xd0\x4a\xa1\xa0\xf3\x79\x80\x5f\xb0\xc0\x24\x4b\x4b\xa8\xae\xf2\xdc\x38\x2e\xa9\x05\x97\x2b\x6d\xe9\xec\xe4\xf4\xe4\xb4\x85\x68\x25\x10\x32\x20\x53\x61\x1a\x45\xcb\x4a\x09\x2a\xb5\x02\x8b\xf4\xfb\xce\x38\xae\xa7\xf0\x4f\x34\xe9\xb1\xd5\x69\xb4\xdd\xc3\x97\xaa\xa4\xd6\xa3\xc6\x7a\x74\x7e\x92\x58\x94\x28\xe8\x4a\xca\x98\x25\x8d\x65\xd3\x64\x45\x6b\x19\xb3\xfb\x57\x36\x4d\xa3\x49\x63\x13\xad\xd0\x85\x0d\x19\xec\x88\x62\xf4\xd6\x13\xa1\x95\xd5\x12\x13\xa9\x8b\x98\x35\xb8\xb0\x9e\x1c\x3c\x9e\xcd\x00\x1d\xc3\xb6\x63\x59\xa3\xb5\xbc\xc0\x21\x1e\x17\x63\x0d\x19\xfc\xf6\x78\x7f\x97\x6c\xb8\xb1\x18\x63\x92\x73\xe2\x8e\xc0\xff\xb5\xc4\xc9\x99\xd6\xcf\xec\xd1\x1d\xd9\x4b\x1a\x45\x93\xf7\xfe\xd7\xe1\x5f\x1b\x83\xb7\xf1\x0c\xe5\x12\xc2\x17\xfc\x94\x65\xc0\xae\x43\x21\x30\x67\xe1\xf9\x0f\x34\x4f\x5a\x12\x2f\x76\x44\xec\x67\x9f\x8b\x8f\xb8\x07\xde\xbc\x87\x8e\x20\xaf\x57\xdc\x14\xd8\x73\x6f\x8c\x55\x90\x91\x6c\x9a\x70\x22\x13\xb3\xbc\xb4\x7c\x21\x31\x67\x33\xe8\xa8\x0d\x52\x65\x94\x3b\x6e\xa3\x36\x3b\xc2\xb3\x87\xf4\xec\xbf\xf4\x92\x0e\xe4\xe8\x9d\xc7\xf5\x33\xeb\x6e\x5e\xe0\x08\xd8\xfa\x29\xbc\xf3\xdf\xb1\xee\x5b\x0e\x9a\x0c\x04\x1d\x3c\x1d\x42\xbb\xb0\x13\xf1\xe7\x66\x28\xf4\x36\x3e\x5f\xbc\xdb\x5c\x22\x83\x4b\x60\x0c\xce\x40\x55\x52\x8e\x93\xfd\xaa\x1b\x75\x80\x2e\x1b\xa3\x8b\x26\x93\xf9\xdc\x49\xce\x90\xc7\x52\xa9\x0a\x58\x1a\xbd\x86\x65\x69\x2c\x41\xcd\x65\x85\xad\xac\x5c\x6b\xee\x54\xe4\xc1\x89\x6b\xb3\xf8\xae\x5a\x2f\xd0\xf4\x73\x14\xea\xd7\x36\xf3\x92\x4b\x8b\xa1\x8a\x6f\x3d\x22\xa4\xb6\x83\x1d\x72\x50\xe8\x4c\x69\x68\x87\x8b\xb3\x21\x0d\x85\x36\x58\xa0\x1a\xae\xe4\x88\xba\x3f\x2d\xee\x2f\x68\xfb\x6b\xd2\x1e\x9d\x46\xdd\xb0\xf5\xa8\x5e\xa2\x5c\xc5\x76\x97\xdd\x9c\xea\x5d\xbe\x8d\x9d\xf6\x7a\xdb\x9b\x89\x1f\x46\xf5\xc0\x58\x1c\x73\xdb\xcd\x63\xe7\xd2\xf8\x14\xed\xaa\xa2\x8a\x24\x49\x7c\x90\x61\x77\x38\x6f\xb0\x81\xbf\x70\xd1\x3e\xcb\x1a\x7b\x36\x9f\x33\x38\xda\x5b\x07\x93\x23\x60\xf3\x9d\x7f\x73\xab\xf8\xc6\xae\x34\x5d\x6e\xb4\x94\xd9\x77\xdb\xce\xe7\x9b\x36\x68\x8b\xf4\x47\xb9\x46\x5d\x51\xfc\xa6\x9e\xff\x2f\x1e\xe7\x2f\x1a\xbf\x9a\x84\xae\x64\xae\xfe\x66\xd4\xe1\xf7\xc0\x60\xd1\xd4\x68\x66\x50\x5a\x28\x09\x4c\xa5\x54\xa9\x8a\x4b\x96\xee\x6d\x89\x86\x1b\x15\xa3\x31\x87\x6b\xdd\x01\x0e\xc4\xf3\x49\xa1\x6c\x67\xf0\xe3\xf8\xf8\xd8\x2f\xa1\x19\x7c\xff\x11\x8e\x5e\x14\x7a\x83\xaa\xd7\x66\xed\x3e\x93\xc8\xcd\xad\x22\x34\x35\x77\x64\x3e\xb7\x61\x83\xf4\x56\x67\x58\x6b\xdb\xe8\xdf\x00\x00\x00\xff\xff\x33\x62\xa5\x6a\x16\x08\x00\x00")

func staticJsWebsocketJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJsWebsocketJs,
		"static/js/websocket.js",
	)
}

func staticJsWebsocketJs() (*asset, error) {
	bytes, err := staticJsWebsocketJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/js/websocket.js", size: 2070, mode: os.FileMode(420), modTime: time.Unix(1495630460, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/html/home.html":  staticHtmlHomeHtml,
	"static/js/chart.js":     staticJsChartJs,
	"static/js/controls.js":  staticJsControlsJs,
	"static/js/websocket.js": staticJsWebsocketJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"html": &bintree{nil, map[string]*bintree{
			"home.html": &bintree{staticHtmlHomeHtml, map[string]*bintree{}},
		}},
		"js": &bintree{nil, map[string]*bintree{
			"chart.js":     &bintree{staticJsChartJs, map[string]*bintree{}},
			"controls.js":  &bintree{staticJsControlsJs, map[string]*bintree{}},
			"websocket.js": &bintree{staticJsWebsocketJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
